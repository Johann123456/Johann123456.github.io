---
layout:     post
title:      "计网整理"
subtitle:   "浏览器中输入URL之后发生了什么"
date:       "2021-04-24"
author:     "Johann"
# # header-img: "img/post-bg-js-version.jpg"
tags:
    - 计网
---

# 浏览器中输入URL之后发生了什么？
## 一、OSI分层
| 名称 | 功能 | 协议 |
| :------ | :------ | :------ |
| **应用层** | 为应用程序提供服务 | 电子邮件协议SMTP、远程登录协议SSH、文件传输协议FTP、HTTP等 |
|表示层| 数据格式转化、数据加密|提供应用层数据的编码转换压缩加密等功能，确保一个应用层发送的数据能被另一个应用层的识别，HTML|
|会话层|建立、管理和维护会话|负责建立、管理和终止表示层实体之间的通信会话，SSL|
|**传输层**|建立、管理和维护端到端连接|管理两个节点间的数据传输，负责可靠传输、流量控制、差错控制，TCP、UDP|
|**网络层**|IP选址以及路由选择|通过IP寻址建立连个节点间的连接，选择合适的路由和交换节点，准确无误地将**数据包**按地址传给目的端，IP、IPv6|
|**数据链路层**|提供介质访问和链路管理|将比特组合成字节再组成帧，使用链路层地址实现互联设备间传送和识别**数据帧**，ARP、RARP|
|**物理层**|负责01与电压、光信号的转换|比特流与物理信号的转换，通过物理介质传输信息，Ethernet、IEEE802.2|

## 二、传输层
### 1、TCP(Transmission Control Protocol, 传输控制协议)
TCP是面向连接的，有流量控制，拥塞控制，提供全双工通信，面向字节流(把应用层传下来的报文看成是字节流，把字节流组织成为大小不等的数据块)，每一条TCP连接只能是一对一的。
### 2、UDP(User Datagram Protocol, 用户数据报协议)
UDP是无连接的，尽最大可能交付，没有拥塞控制，面向报文(对应用层的报文不拆分也不合并，只是添加UDP首部)，支持一对一、一对多、多对一、多对多通信
### TCP三次握手和四次挥手
![avatar](/img/tcp-3handshack.jpg)
三次握手需要
## 三、浏览器输入URL之后发生了什么

**URL(Uniform Resource Locator, 统一资源定位符)**：用于定位互联网上资源，俗称“网址”。一个典型的URL例子：

```css
schmeme://host.domain:port/path/filename
```
各个部分定义如下：

- schmeme : 因特网服务类型。比如http、https、ftp、file、
- host : 域主机(http的默认主机是www)
- domain : 因特网域名如 zju.edu.cn
- port : 主机上端口号(http默认端口号80)
- path : 服务器上的路径(如果省略，则文档必须位于根目录中)
- filename : 资源名称

![avatar](/img/a-url.jpg)

### 1、DNS域名解析
浏览器不能直接通过域名查找服务器，而是要通过IP，IP是32位二进制数，而域名是英文字母配合数字，域名更适合人类记忆，IP更适合计算机，因此需要DNS域名解析服务。  
**解析流程：**  
- 浏览器缓存 : 浏览器按照一定频率缓存DNS记录
- 操作系统缓存 : host文件中
- 路由缓存
- ISP的DNS服务器 : 运营商会提供DNS查询请求
- 根DNS服务器 : 递归查询，比如会先问根服务器.cn的域名服务器的IP，然后再问.edu的域名服务器的IP

### 2、TCP连接
根据IP和端口号与服务器建立连接(三次握手)
### 3、发送HTTP请求
客户端发送HTTP请求，浏览器发送只能使用GET和POST方法，打开网页使用的是GET方法。在请求行中包含请求方法、请求资源路径，附带自身的认证和身份信息，发给服务器
### 4、服务器处理请求并返回HTTP报文
服务器将响应报文返回给客户端，浏览器拿到响应文本html之后进行渲染
### 5、数据传输完毕，断开TCP连接(四次挥手)

